{"ast":null,"code":"import { DELETE_TODO, SAVE_TODO, GET_TODO } from '../types';\nconst toDoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case SAVE_TODO:\n      return [...state, payload];\n    case GET_TODO:\n      return [payload];\n    case DELETE_TODO:\n      return state.filter(el => el !== payload);\n    default:\n      return state;\n  }\n};\nexport default toDoReducer;","map":{"version":3,"names":["DELETE_TODO","SAVE_TODO","GET_TODO","toDoReducer","state","action","type","payload","filter","el"],"sources":["/home/andrey/job/dragAndDropToDo/client/src/redux/reducers/toDoRedcuer.js"],"sourcesContent":["import { DELETE_TODO, SAVE_TODO, GET_TODO } from '../types';\n\nconst toDoReducer = (state = [], action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SAVE_TODO:\n      return [...state, payload];\n    case GET_TODO:\n      return [payload];\n    case DELETE_TODO:\n      return state.filter((el) => el !== payload);\n    default:\n      return state;\n  }\n};\nexport default toDoReducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,UAAU;AAE3D,MAAMC,WAAW,GAAG,YAAwB;EAAA,IAAvBC,KAAK,uEAAG,EAAE;EAAA,IAAEC,MAAM;EACrC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAQC,IAAI;IACV,KAAKL,SAAS;MACZ,OAAO,CAAC,GAAGG,KAAK,EAAEG,OAAO,CAAC;IAC5B,KAAKL,QAAQ;MACX,OAAO,CAACK,OAAO,CAAC;IAClB,KAAKP,WAAW;MACd,OAAOI,KAAK,CAACI,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKF,OAAO,CAAC;IAC7C;MACE,OAAOH,KAAK;EAAC;AAEnB,CAAC;AACD,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}